<script type='text/javascript'>
Widget = {
 
 update: function(id,params) {
    new Ajax.Request("<%= url_for :action => 'widget' -%>/" + id, { parameters: params } );
 }

}
CMSDashboard = {
  editing: false,

 
  updateWidgets:function() {
   this.editing ? this.editWidgets() : this.stopEditingWidgets();
  },

  editWidgets: function() {
    $$('.dashboard_widget_title').invoke('addClassName','dashboard_widget_titlebar_move');
    $$('.dashboard_widget_column_add').invoke('show');
    $$('.dashboard_widget_tools').invoke('show');
    $$('.dashboard_widget_title_edit').invoke('show');
    $$('.dashboard_widget_hidden').invoke('show');

    this.createSortables();
    this.editing = true;
  },

  stopEditingWidgets: function() {
    $$('.dashboard_widget_title').invoke('removeClassName','dashboard_widget_titlebar_move');
    $$('.dashboard_widget_column_add').invoke('hide');
    $$('.dashboard_widget_tools').invoke('hide');
    $$('.dashboard_widget_title_edit').invoke('hide');
    $$('.dashboard_widget_hidden').invoke('hide');
    this.destroySortables();
    this.editing = false;
  },

  toggleEdit: function() {
     this.editing ? this.stopEditingWidgets() : this.editWidgets();
  },
  
  destroySortables: function() {
   var zones = $$('.dashboard_widget_column');
   zones.each(function(zone) { Sortable.destroy(zone); });
  },

  createSortables:function() {
    var zones = $$('.dashboard_widget_column');
    var zone_idxs = zones.pluck('id');

    zones.each(function(zone) {
       Sortable.create(zone.id, {
           dropOnEmpty:true,
           handle:'dashboard_widget_titlebar',
           tag:'div',
           only:'dashboard_widget',
           containment: zone_idxs,
           constraint:false,
           onUpdate: CMSDashboard.updatePositions
        });
    });
  },

  positionTimer: null,

  updatePositions: function() {
    if(CMSDashboard.positionTimer) clearTimeout(CMSDashboard.positionTimer);
    CMSDashboard.positionTimer = setTimeout(CMSDashboard.submitPositions,20);
  },

  submitPositions: function() {
    CMSDashboard.positionTimer = null;
    var zones = $$('.dashboard_widget_column');
    var params = zones.map(function(zone) { return Sortable.serialize(zone) }).join("&");
    new Ajax.Request('<%= url_for(:action => 'positions') -%>',{ parameters: params });
  },

  addWidget: function(column) {
    SCMS.remoteOverlay("<%= url_for(:action => 'edit') -%>", { column: column });
  },

  submitWidgetForm: function(params) {
    SCMS.updateOverlay("<%= url_for(:action => 'edit') -%>", params);
  },

  editWidget: function(widget_id) {
    SCMS.remoteOverlay("<%= url_for(:action => 'edit') -%>", { widget_id: widget_id });
  },

  deleteWidget: function(widget_id) { 
   if(confirm("Are you sure you want to permanently delete your widget?")) {
     new Ajax.Request('<%= url_for(:action => 'remove') -%>', { parameters: { widget_id: widget_id } });
   }

  },

  hideWidget: function(widget_id) {
   if(confirm("Are you sure you want to hide this site widget (you will be able to added back again later)?")) {
     new Ajax.Request('<%= url_for(:action => 'remove') -%>', { parameters:  { widget_id: widget_id }});
   }
  },

  showWidget: function(widget_id) {
     new Ajax.Request('<%= url_for(:action => 'show') -%>', { parameters:  { widget_id: widget_id }});
  }
  

};


</script>

<% action_panel :more => myself.has_role?(:editor_site_management)   do |p| -%>
  <%= p.link 'Edit Widgets', { :icon => 'add.png', :url => 'javascript:void(0);', :id => 'edit_widgets' }, :onclick => 'CMSDashboard.editWidgets();', :"j-action" => 'swap', :swap => '#stop_editing_widgets,#edit_widgets' %>

  <%= p.link 'Stop Editing Widgets', { :icon => 'remove.png', :hidden => true, :url => 'javascript:void(0);', :id => 'stop_editing_widgets' }, :onclick => 'CMSDashboard.stopEditingWidgets();', :"j-action" => 'swap', :swap => '#edit_widgets,#stop_editing_widgets' %>

<% end -%>
<% if myself.has_role?(:editor_site_management)  %>
<% more_action_panel do |p| -%>
  <%= p.link 'Edit Site Widgets',:action => :site_widgets %>
<% end -%>
<% end -%>

<hr/>

<table width='100%' cellspacing='0' cellpadding='0'>
  <tr>
    <% width = (100.0 / @widget_columns.length).floor;  -%>
    <% @widget_columns.each_with_index do |column,idx| -%>
      <td style='width:<%= width -%>%;' valign='top'>
        <div class='dashboard_widget_column_add' style='display:none;' onclick='CMSDashboard.addWidget(<%= idx -%>);' >Add Widget Here</div>
        <div id='column_<%= idx -%>' class='dashboard_widget_column'>
          <% column.each do |widget| -%>
            <%= render :partial => 'widget', :locals => {:widget => widget } -%>
          <% end -%>
        </div>
      </td>
    <% end -%>
  </tr>
</table>

