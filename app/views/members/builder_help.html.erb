<style>
ul {
  list-style: none;
  font-size: 11px;
}
ul ul {
  padding-left: 20px;
}
ul li.fields {
  padding-bottom: 10px;
}

ul ul li {
  padding-bottom: 3px;
}
span.heading {
  font-size: 13px;
  font-weight: bold;
}
</style>

<%
  types = {}
  seen_fields = {}
%>
<div class="cms_form" style="width:720px; padding:5px;">

<h4>Instructions</h4>

<p>
A filter is a set of operations used to create a list of users. An operation is a field and its method.
<br/>
Ex: <b>created</b>.<u>since</u>(7, "days") - Will return all the user who where created in the last 7 days.
<br/>
<br/>
</p>

<div id="builder_fields" style="width:400px; padding-right:20px; float:left;">
<h2 style="border-bottom: 1px solid #000; width: 300px;">Fields</h2>
<ul>
<% @handlers.each do |info| -%>

  <li class="fields"><span class="heading"><%= info[:name] %></span>
  <ul>
  <% info[:class].user_segment_fields.keys.collect { |key| key.to_s }.sort.each do |key| -%>
    <% field_name = key
       field = info[:class].user_segment_fields[key.to_sym]
       type_name = field[:type].to_s.underscore.split("/")[-1].sub(/_type$/,'').humanize
     -%>
    <li><%= '* ' if seen_fields[key] %><%= field[:name].sub(/^.*?: /, '') %>: <b><%= key %></b>
      - <em><%= type_name %></em>
    </li>
  <% seen_fields[key] = 1
     types[type_name] = field[:type]
  -%>
  <% end -%>
  </ul>
  </li>

<% end -%>
</ul>
<p style="padding-left:10px;">* available through <b>AND</b> condition only</p>
</div>

<div id="builder_types" style="width:300px; float:right;">
<h2 style="border-bottom: 1px solid #000; width: 300px;">Types</h2>
<ul>
<% types.sort.each do |type_name, type_class| -%>
  <li><b><%= type_name %></b>
  <ul>
  <% type_class.user_segment_field_type_operations.keys.collect { |key| key.to_s }.sort.each do |key| -%>
    <% operation = type_class.user_segment_field_type_operations[key.to_sym] -%>
    <li><%= '* ' if operation[:complex] %><u><%= key %></u>(<%= operation[:argument_names].join(', ') %>) <%= h(' - ' + operation[:description]) if operation[:description] %>
      <ul>
      <% operation[:arguments].each_with_index do |arg,idx| -%>
        <li><%= operation[:argument_names][idx] %> - <em><%= arg %></em>
          <% if arg == :option -%>
            <ul><li>
            <%= operation[:argument_options][idx][:options].collect { |opt| opt = opt[0] if opt.is_a?(Array); opt }.join(', ') if arg == :option %>
            </li></ul>
          <% end -%>
        </li>
      <% end -%>
      </ul>
    </li>
  <% end -%>
  </ul>
  </li>
<% end -%>
</ul>
<p>* complex functions can not be <b>COMBINED</b></p>
</div>

<br style="clear:both;"/>
</div>

